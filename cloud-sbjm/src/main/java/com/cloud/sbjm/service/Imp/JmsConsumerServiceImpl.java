package com.cloud.sbjm.service.Imp;import org.springframework.jms.annotation.JmsListener;import org.springframework.messaging.handler.annotation.SendTo;import org.springframework.stereotype.Service;import com.cloud.sbjm.service.JmsConsumerService;/** * 消息消费者 */@Servicepublic class JmsConsumerServiceImpl implements JmsConsumerService {// 使用JmsListener配置消费者监听的队列，其中text是接收到的消息    /**     * 消费者接收信息1(接收队列为mytest.queue的信息，并马上回复信息到out.queue队列中)     */    @Override// 使用JmsListener配置消费者监听的队列，其中text是接收到的消息      // @JmsListener(destination = "mytest.queue")//@SendTo("out.queue")      public String receiveQueue1(String text) {        System.out.println("消费者1收到目的地为mytest.queue发来的信息" + text);        return "mytest.queue接收到你的信息了";    }    /**     * 消费者接收信息2(先订阅mytest.topic话题,后接收话题为mytest.topic的信息)     */    @Override    // @JmsListener(destination = "mytest.topic")    public void receiveTopic2(String text) {        System.out.println("消费者2收到话题为mytest.topic发来的信息" + text);    }    /**     * 消费者接收信息3(先订阅mytest.topic话题,后接收话题为mytest.topic的信息)     */    @Override    //@JmsListener(destination = "mytest.topic")     public void receiveTopic3(String text) {        System.out.println("消费者3收到话题为mytest.topic发来的信息" + text);    }}